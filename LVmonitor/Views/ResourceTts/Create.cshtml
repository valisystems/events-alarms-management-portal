@model LvMonitor.Models.Lvm_ResourceTts

<div class="lvm-box">
    <div class="lvm-box-header">
        <span>@ViewBag.SubTitle @ViewBag.Title</span>
    </div>
    <div class="lvm-box-body">
        @using (Html.BeginForm())
        {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.VoiceName, "Voice Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownListFor(r => r.VoiceName, (SelectList)ViewBag.lVoice, htmlAttributes: new { @class = "form-control" })*@
                    @*@Html.DropDownList("VoiceName", (SelectList)ViewBag.lVoice, null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.DropDownList("VoiceName", new SelectList(ViewBag.lVoice, "Name", "Name", Model.VoiceName), null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AudioChannel, "Audio Channel", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(r => r.AudioChannel, (SelectList)ViewBag.lChannel, htmlAttributes: new { @class = "form-control", @style = "width:100px;max-width:100px;" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BitsPerSample, "Bits Per Sample", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(r => r.BitsPerSample, (SelectList)ViewBag.lBits, htmlAttributes: new { @class = "form-control", @style = "width:100px;max-width:100px;" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Volume, "Volume (0 - 100)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Volume, new { htmlAttributes = new { @class = "form-control", @style = "width:100px;max-width:100px;" } })
                    @Html.ValidationMessageFor(model => model.Volume, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Rate, "Rate (-10 - 10)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", @style = "width:100px;max-width:100px;" } })
                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SamplesPerSecond, "Samples Per Second", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SamplesPerSecond, new { htmlAttributes = new { @class = "form-control", @style = "width:100px;max-width:100px;" } })
                    @Html.ValidationMessageFor(model => model.SamplesPerSecond, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TextName, "Text Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TextName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TextName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control", @style = "height:100px;" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    @*@Html.ActionLink("Voice Test", "GetVoiceTest", null, new { @class = "btn btn-default" })*@
                </div>
            </div>
        </div>
        }
    </div>
</div>